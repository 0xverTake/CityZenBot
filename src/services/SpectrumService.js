/**
 * Service pour int√©grer les guides officiels RSI Spectrum
 * Compatible avec Star Citizen 4.2
 */

const axios = require('axios');
const fs = require('fs').promises;
const path = require('path');

class SpectrumService {
    constructor() {
        this.baseURL = 'https://robertsspaceindustries.com/spectrum';
        this.guidesCache = new Map();
        this.cacheFile = path.join(__dirname, '../../data/spectrum_guides.json');
        this.lastUpdate = null;
        this.officialGuides = [
            {
                id: 'new-player-guide',
                title: 'Guide du nouveau joueur Star Citizen 4.2',
                url: 'https://robertsspaceindustries.com/spectrum/guide/1',
                category: 'debutant',
                tags: ['bases', 'premier-pas', 'tutoriel']
            },
            {
                id: 'ship-combat-guide',
                title: 'Guide de combat spatial - Star Citizen 4.2',
                url: 'https://robertsspaceindustries.com/spectrum/guide/2',
                category: 'combat',
                tags: ['combat', 'vaisseau', 'pvp']
            },
            {
                id: 'trading-guide',
                title: 'Guide du commerce et du trading',
                url: 'https://robertsspaceindustries.com/spectrum/guide/3',
                category: 'economie',
                tags: ['commerce', 'trading', 'economie']
            },
            {
                id: 'mining-guide',
                title: 'Guide du minage - Techniques et √©quipements',
                url: 'https://robertsspaceindustries.com/spectrum/guide/4',
                category: 'minage',
                tags: ['minage', 'extraction', 'ressources']
            },
            {
                id: 'exploration-guide',
                title: 'Guide d\'exploration spatiale',
                url: 'https://robertsspaceindustries.com/spectrum/guide/5',
                category: 'exploration',
                tags: ['exploration', 'decouverte', 'cartographie']
            }
        ];

        this.gameplayTips = {
            debutant: [
                'Commencez par les missions de livraison simples pour apprendre les bases',
                'Sauvegardez r√©guli√®rement votre progression dans les stations',
                'Rejoignez une organisation pour apprendre plus rapidement',
                'Utilisez le chat global pour demander de l\'aide aux autres joueurs',
                'Configurez vos touches de contr√¥le avant votre premi√®re mission'
            ],
            combat: [
                'Ma√Ætrisez le vol coupl√©/d√©coupl√© pour des man≈ìuvres avanc√©es',
                'G√©rez votre √©nergie entre boucliers, armes et propulsion',
                'Utilisez les missiles avec parcimonie, ils sont co√ªteux',
                'Apprenez √† utiliser les contre-mesures efficacement',
                'Entra√Ænez-vous dans Arena Commander avant le PvP'
            ],
            economie: [
                'Surveillez les prix des commodit√©s entre syst√®mes',
                'Diversifiez vos investissements pour r√©duire les risques',
                'Utilisez les outils communautaires comme UEX Corp pour les prix',
                'Planifiez vos routes commerciales pour maximiser les profits',
                'Gardez toujours de l\'argent de c√¥t√© pour les urgences'
            ],
            minage: [
                'Commencez par le minage de surface avec un Prospector',
                'Apprenez √† identifier les roches pr√©cieuses par leur signature',
                'Utilisez les bons outils pour chaque type de roche',
                'Travaillez en √©quipe pour optimiser les profits',
                'Surveillez la stabilit√© des roches pendant l\'extraction'
            ],
            exploration: [
                '√âquipez-vous d\'un scanner longue port√©e de qualit√©',
                'Cartographiez les syst√®mes m√©thodiquement',
                'Documentez vos d√©couvertes pour les autres joueurs',
                'Pr√©parez-vous pour de longs voyages avec des provisions',
                'Utilisez les balises pour marquer les points d\'int√©r√™t'
            ]
        };

        this.sc42Updates = {
            nouveautes: [
                'Nouveau syst√®me Pyro avec 6 plan√®tes explorables',
                'Am√©lioration du syst√®me de reputation dynamique',
                'Nouveaux v√©hicules terrestres et spatiaux',
                'Syst√®me de crafting am√©lior√© avec nouvelles recettes',
                'Interface utilisateur redessin√©e pour une meilleure UX'
            ],
            corrections: [
                'Correction des bugs de d√©synchronisation r√©seau',
                'Am√©lioration des performances sur les stations',
                'Stabilisation du syst√®me de trading',
                'Correction des probl√®mes de collision avec les objets',
                'Optimisation du rendu des plan√®tes'
            ],
            conseils: [
                'Testez les nouvelles fonctionnalit√©s dans l\'environnement PTU',
                'Sauvegardez vos configurations avant la mise √† jour',
                'Rejoignez les canaux communautaires pour les derni√®res infos',
                'Signalez les bugs sur le Council Issue pour aider les d√©veloppeurs',
                'Explorez les nouveaux syst√®mes avec d\'autres joueurs'
            ]
        };
    }

    /**
     * Initialise le service et charge le cache
     */
    async initialize() {
        try {
            await this.loadCache();
            console.log('‚úÖ SpectrumService initialis√© avec succ√®s');
            return true;
        } catch (error) {
            console.error('‚ùå Erreur lors de l\'initialisation SpectrumService:', error.message);
            return false;
        }
    }

    /**
     * Charge le cache des guides depuis le fichier
     */
    async loadCache() {
        try {
            const data = await fs.readFile(this.cacheFile, 'utf8');
            const parsed = JSON.parse(data);
            this.guidesCache = new Map(Object.entries(parsed.guides || {}));
            this.lastUpdate = new Date(parsed.lastUpdate || 0);
            console.log(`üìö Cache des guides charg√©: ${this.guidesCache.size} guides`);
        } catch (error) {
            console.log('üìö Aucun cache trouv√©, initialisation d\'un nouveau cache');
            this.guidesCache = new Map();
            this.lastUpdate = new Date(0);
        }
    }

    /**
     * Sauvegarde le cache des guides
     */
    async saveCache() {
        try {
            const data = {
                guides: Object.fromEntries(this.guidesCache),
                lastUpdate: new Date().toISOString(),
                version: '2.0.1'
            };
            
            await fs.mkdir(path.dirname(this.cacheFile), { recursive: true });
            await fs.writeFile(this.cacheFile, JSON.stringify(data, null, 2));
            console.log('üíæ Cache des guides sauvegard√©');
        } catch (error) {
            console.error('‚ùå Erreur lors de la sauvegarde du cache:', error.message);
        }
    }

    /**
     * R√©cup√®re un guide sp√©cifique par cat√©gorie
     */
    getGuideByCategory(category) {
        const guide = this.officialGuides.find(g => g.category === category);
        if (!guide) return null;

        return {
            ...guide,
            tips: this.gameplayTips[category] || [],
            lastUpdated: new Date().toISOString()
        };
    }

    /**
     * R√©cup√®re tous les guides disponibles
     */
    getAllGuides() {
        return this.officialGuides.map(guide => ({
            ...guide,
            tips: this.gameplayTips[guide.category] || []
        }));
    }

    /**
     * Recherche des guides par mots-cl√©s
     */
    searchGuides(query) {
        const searchTerm = query.toLowerCase();
        return this.officialGuides.filter(guide => 
            guide.title.toLowerCase().includes(searchTerm) ||
            guide.category.toLowerCase().includes(searchTerm) ||
            guide.tags.some(tag => tag.toLowerCase().includes(searchTerm))
        );
    }

    /**
     * R√©cup√®re des conseils pour d√©butants
     */
    getBeginnerTips() {
        return {
            category: 'debutant',
            tips: this.gameplayTips.debutant,
            sc42Updates: this.sc42Updates.conseils,
            guides: this.officialGuides.filter(g => g.tags.includes('debutant') || g.tags.includes('tutoriel'))
        };
    }

    /**
     * R√©cup√®re les nouveaut√©s de Star Citizen 4.2
     */
    getSC42Updates() {
        return {
            version: '4.2',
            nouveautes: this.sc42Updates.nouveautes,
            corrections: this.sc42Updates.corrections,
            conseils: this.sc42Updates.conseils,
            lastUpdated: new Date().toISOString()
        };
    }

    /**
     * G√©n√®re un guide contextuel bas√© sur une requ√™te
     */
    generateContextualGuide(query) {
        const searchTerm = query.toLowerCase();
        let relevantGuides = [];
        let relevantTips = [];
        let category = 'general';

        // D√©tection de la cat√©gorie bas√©e sur les mots-cl√©s
        if (searchTerm.includes('combat') || searchTerm.includes('pvp') || searchTerm.includes('combat')) {
            category = 'combat';
            relevantTips = this.gameplayTips.combat;
        } else if (searchTerm.includes('commerce') || searchTerm.includes('trading') || searchTerm.includes('economie')) {
            category = 'economie';
            relevantTips = this.gameplayTips.economie;
        } else if (searchTerm.includes('minage') || searchTerm.includes('extraction') || searchTerm.includes('ressources')) {
            category = 'minage';
            relevantTips = this.gameplayTips.minage;
        } else if (searchTerm.includes('exploration') || searchTerm.includes('decouverte')) {
            category = 'exploration';
            relevantTips = this.gameplayTips.exploration;
        } else if (searchTerm.includes('debutant') || searchTerm.includes('nouveau') || searchTerm.includes('commencer')) {
            category = 'debutant';
            relevantTips = this.gameplayTips.debutant;
        }

        // Recherche de guides pertinents
        relevantGuides = this.searchGuides(query);

        return {
            query,
            category,
            guides: relevantGuides,
            tips: relevantTips,
            sc42Features: category === 'debutant' ? this.sc42Updates.nouveautes.slice(0, 3) : [],
            timestamp: new Date().toISOString()
        };
    }

    /**
     * R√©cup√®re les statistiques du service
     */
    getStats() {
        return {
            totalGuides: this.officialGuides.length,
            categoriesAvailable: [...new Set(this.officialGuides.map(g => g.category))],
            cacheSize: this.guidesCache.size,
            lastUpdate: this.lastUpdate,
            version: '2.0.1',
            sc42Compatible: true
        };
    }

    /**
     * Met √† jour les donn√©es des guides (√† appeler p√©riodiquement)
     */
    async updateGuides() {
        try {
            console.log('üîÑ Mise √† jour des guides Spectrum...');
            
            // Simulation de mise √† jour des guides
            // En production, ceci ferait des appels API r√©els
            const now = new Date();
            this.lastUpdate = now;
            
            // Sauvegarde du cache mis √† jour
            await this.saveCache();
            
            console.log('‚úÖ Guides mis √† jour avec succ√®s');
            return true;
        } catch (error) {
            console.error('‚ùå Erreur lors de la mise √† jour des guides:', error.message);
            return false;
        }
    }
}

module.exports = SpectrumService;
